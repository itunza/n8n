version: '3.8'
volumes:
  db_storage: null
  n8n_storage: null
  redis_storage: null
x-shared:
  restart: always
  image: n8nio/n8n
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - 'DB_POSTGRESDB_DATABASE=${POSTGRES_DB}'
    - 'DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}'
    - 'DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}'
    - N8N_PUSH_BACKEND=websocket
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_BASIC_AUTH_ACTIVE=true
    - 'N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}'
    - 'N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}'
    - 'N8N_HOST=${DOMAIN_NAME}'
    - N8N_PROTOCOL=https
    - NODE_ENV=production
    - 'WEBHOOK_URL=https://${DOMAIN_NAME}/'
    - 'GENERIC_TIMEZONE=${GENERIC_TIMEZONE}'
    - 'N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}'
  links:
    - postgres
    - redis
  volumes:
    - 'n8n_storage:/home/node/.n8n'
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
services:
  postgres:
    image: 'postgres:16'
    restart: always
    environment:
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_DB=${POSTGRES_DB}'
      - 'POSTGRES_NON_ROOT_USER=${POSTGRES_NON_ROOT_USER}'
      - 'POSTGRES_NON_ROOT_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}'
    volumes:
      - 'db_storage:/var/lib/postgresql/data'
      - './init-data.sh:/docker-entrypoint-initdb.d/init-data.sh'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}'
      interval: 5s
      timeout: 5s
      retries: 10
  redis:
    image: 'redis:6-alpine'
    restart: always
    volumes:
      - 'redis_storage:/data'
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 5s
      timeout: 5s
      retries: 10
  n8n:
    restart: always
    image: n8nio/n8n
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - 'DB_POSTGRESDB_DATABASE=${POSTGRES_DB}'
      - 'DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}'
      - 'DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}'
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_HEALTH_CHECK_ACTIVE=true
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER
      - N8N_BASIC_AUTH_PASSWORD
      - 'N8N_HOST=${DOMAIN_NAME}'
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - 'WEBHOOK_URL=https://${DOMAIN_NAME}/'
      - 'GENERIC_TIMEZONE=${GENERIC_TIMEZONE}'
      - 'N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}'
    links:
      - postgres
      - redis
    volumes:
      - 'n8n_storage:/home/node/.n8n'
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '${HOST_PORT}:5678'
  n8n-worker:
    restart: always
    image: n8nio/n8n
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - 'DB_POSTGRESDB_DATABASE=${POSTGRES_DB}'
      - 'DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}'
      - 'DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}'
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_HEALTH_CHECK_ACTIVE=true
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER
      - N8N_BASIC_AUTH_PASSWORD
      - 'N8N_HOST=${DOMAIN_NAME}'
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - 'WEBHOOK_URL=https://${DOMAIN_NAME}/'
      - 'GENERIC_TIMEZONE=${GENERIC_TIMEZONE}'
      - 'N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}'
    links:
      - postgres
      - redis
    volumes:
      - 'n8n_storage:/home/node/.n8n'
    depends_on:
      - n8n
    command: worker
